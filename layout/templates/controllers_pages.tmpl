package controllers

import (
	"net/http"

	"{{.ModuleName}}/database"
	"{{.ModuleName}}/views"

	"github.com/a-h/templ"
	"github.com/labstack/echo/v4"
	"github.com/maypok86/otter"
)

type Pages struct {
{{- if eq .Database "postgresql"}}
	db    database.Postgres
{{- else if eq .Database "sqlite"}}
	db    database.SQLite
{{- end}}
	cache otter.CacheWithVariableTTL[string, templ.Component]
}

{{- if eq .Database "postgresql"}}
func newPages(
	db database.Postgres,
	cache otter.CacheWithVariableTTL[string, templ.Component],
) Pages {
	return Pages{db, cache}
}

{{- else if eq .Database "sqlite"}}
func newPages(
	db database.SQLite,
	cache otter.CacheWithVariableTTL[string, templ.Component],
) Pages {
	return Pages{db, cache}
}

{{- end}}

func (p Pages) Home(c echo.Context) error {
	return Render(c, http.StatusOK, views.Home())
}

func (p Pages) NotFound(c echo.Context) error {
	return Render(c, http.StatusOK, views.NotFound())
}
