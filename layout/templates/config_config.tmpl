// Package config provides application-wide configuration settings.
package config

import (
	"fmt"
	"os"
	"strings"
)

const (
	DevEnvironment  = "development"
	ProdEnvironment = "production"
	TestEnvironment = "testing"
)

// Global application settings that can be used throughout the codebase with defaults.
var (
	Env = func() string {
		if os.Getenv("ENVIRONMENT") != "" {
			return os.Getenv("ENVIRONMENT")
		}

		return DevEnvironment
	}()
	ProjectName = func() string {
		if os.Getenv("PROJECT_NAME") != "" {
			return os.Getenv("PROJECT_NAME")
		}

		return "andurel"
	}()
	Domain = func() string {
		var domain string
		var protocol string

		if os.Getenv("APP_PROTOCOL") != "" {
			protocol = os.Getenv("APP_PROTOCOL")
		} else {
			protocol = "http"
		}

		if os.Getenv("APP_DOMAIN") != "" {
			domain = os.Getenv("APP_DOMAIN")
		} else {
			domain = "localhost:8080"
		}

		return fmt.Sprintf(
			"%v://%v", protocol, domain,
		)
	}()
	AuthenticatedSessionName = func() string {
		return "ua-" + strings.ToLower(ProjectName) + "-" + Env
	}()
)

type Config struct {
	App app
	DB   database
{{- range .Blueprint.Config.SortedFields}}
	{{.Name}} {{.Type}}
{{- end}}
}

func NewConfig() Config {
	return Config{
		App: newAppConfig(),
		DB:   newDatabaseConfig(),
{{- range .Blueprint.Config.SortedFields}}
		{{.Name}}: new{{.Name}}Config(),
{{- end}}
	}
}
