// Package controllers provides HTTP handlers for the web application.
package controllers

import (
{{- range .Blueprint.Controllers.Imports.SortedItems}}
	"{{.}}"
{{- end}}
)

type Controllers struct {
{{- range .Blueprint.Controllers.SortedFields}}
	{{.Name}} {{.Type}}
{{- end}}
}

func New(
{{- range $i, $dep := .Blueprint.Controllers.SortedDependencies}}
	{{$dep.Name}} {{$dep.Type}},
{{- end}}
) (Controllers, error) {
	cacheBuilder, err := otter.NewBuilder[string, templ.Component](20)
	if err != nil {
		return Controllers{}, err
	}

	pageCacher, err := cacheBuilder.WithVariableTTL().Build()
	if err != nil {
		return Controllers{}, err
	}

{{- range .Blueprint.Controllers.SortedConstructors}}
	{{.VarName}} := {{.Expression}}
{{- end}}

	return Controllers{
{{- range .Blueprint.Controllers.SortedConstructors}}
		{{.VarName}},
{{- end}}
	}, nil
}

func render(ctx echo.Context, t templ.Component) error {
	buf := templ.GetBuffer()
	defer templ.ReleaseBuffer(buf)

	appCtx := ctx.Get(string(cookies.AppKey))
	withAppCtx := context.WithValue(
		ctx.Request().Context(),
		cookies.AppKey,
		appCtx,
	)

	flashCtx := ctx.Get(string(cookies.FlashKey))
	withFlashCtx := context.WithValue(
		withAppCtx,
		cookies.FlashKey,
		flashCtx,
	)

	if err := t.Render(withFlashCtx, buf); err != nil {
		return err
	}

	return ctx.HTML(http.StatusOK, buf.String())
}
