// Code generated by andurel. DO NOT EDIT.
// This file contains constructor functions for SQLC parameters.
// These functions are automatically updated during schema refresh operations.

package db

import (
{{- range .StandardImports}}
	"{{.}}"
{{- end}}
{{if and (gt (len .StandardImports) 0) (gt (len .ExternalImports) 0)}}

{{end}}
{{- range .ExternalImports}}
	"{{.}}"
{{- end}}
)

// Constructor functions for SQLC parameters - these get updated during refresh
// to make schema changes compiler-enforced and visible

func NewInsert{{.Name}}Params(
{{- range .Fields}}
{{- if not (or (eq .Name "ID") (eq .Name "CreatedAt") (eq .Name "UpdatedAt"))}}
	{{lower .Name}} {{.SQLCType}},
{{- end}}
{{- end}}
) Insert{{.Name}}Params {
	return Insert{{.Name}}Params{
		ID: {{uuidParam "uuid.New()"}},
{{- range .Fields}}
{{- if not (or (eq .Name "ID") (eq .Name "CreatedAt") (eq .Name "UpdatedAt"))}}
		{{.Name}}: {{lower .Name}},
{{- end}}
{{- end}}
	}
}

func NewUpdate{{.Name}}Params(
	id {{if eq .DatabaseType "sqlite"}}string{{else}}uuid.UUID{{end}},
{{- range .Fields}}
{{- if and (ne .Name "ID") (ne .Name "CreatedAt") (ne .Name "UpdatedAt")}}
	{{lower .Name}} {{.SQLCType}},
{{- end}}
{{- end}}
) Update{{.Name}}Params {
	return Update{{.Name}}Params{
		ID: id,
{{- range .Fields}}
{{- if and (ne .Name "ID") (ne .Name "CreatedAt") (ne .Name "UpdatedAt")}}
		{{.Name}}: {{lower .Name}},
{{- end}}
{{- end}}
	}
}

func NewQueryPaginated{{.Name}}sParams(limit, offset int64) QueryPaginated{{.Name}}sParams {
	return QueryPaginated{{.Name}}sParams{
		Limit:  limit,
		Offset: offset,
	}
}
