package routes

import (
	"net/http"
	"strings"

	"github.com/google/uuid"
)

const (
	{{.PluralName | ToLower}}RoutePrefix = "/{{.PluralName}}"
	{{.PluralName | ToLower}}NamePrefix  = "{{.PluralName}}"
)

var {{.ResourceName}}Routes = []Route{
	{{.ResourceName}}Index,
	{{.ResourceName}}Show.Route,
	{{.ResourceName}}New,
	{{.ResourceName}}Create,
	{{.ResourceName}}Edit.Route,
	{{.ResourceName}}Update.Route,
	{{.ResourceName}}Destroy.Route,
}

var {{.ResourceName}}Index = Route{
	Name:         {{.PluralName | ToLower}}NamePrefix + ".index",
	Path:         {{.PluralName | ToLower}}RoutePrefix,
	Method:       http.MethodGet,
	Controller:      "{{.ResourceName}}s",
	ControllerMethod: "Index",
}

var {{.ResourceName}}Show = {{.PluralName | ToLower}}Show{
	Route: Route{
		Name:         {{.PluralName | ToLower}}NamePrefix + ".show",
		Path:         {{.PluralName | ToLower}}RoutePrefix + "/:id",
		Method:       http.MethodGet,
		Controller:      "{{.ResourceName}}s",
		ControllerMethod: "Show",
	},
}

type {{.PluralName | ToLower}}Show struct {
	Route
}

func (r {{.PluralName | ToLower}}Show) GetPath(id uuid.UUID) string {
	return strings.Replace(r.Path, ":id", id.String(), 1)
}

var {{.ResourceName}}New = Route{
	Name:         {{.PluralName | ToLower}}NamePrefix + ".new",
	Path:         {{.PluralName | ToLower}}RoutePrefix + "/new",
	Method:       http.MethodGet,
	Controller:      "{{.ResourceName}}s",
	ControllerMethod: "New",
}

var {{.ResourceName}}Create = Route{
	Name:         {{.PluralName | ToLower}}NamePrefix + ".create",
	Path:         {{.PluralName | ToLower}}RoutePrefix,
	Method:       http.MethodPost,
	Controller:      "{{.ResourceName}}s",
	ControllerMethod: "Create",
}

var {{.ResourceName}}Edit = {{.PluralName | ToLower}}Edit{
	Route: Route{
		Name:         {{.PluralName | ToLower}}NamePrefix + ".edit",
		Path:         {{.PluralName | ToLower}}RoutePrefix + "/:id/edit",
		Method:       http.MethodGet,
		Controller:      "{{.ResourceName}}s",
		ControllerMethod: "Edit",
	},
}

type {{.PluralName | ToLower}}Edit struct {
	Route
}

func (r {{.PluralName | ToLower}}Edit) GetPath(id uuid.UUID) string {
	return strings.Replace(r.Path, ":id", id.String(), 1)
}

var {{.ResourceName}}Update = {{.PluralName | ToLower}}Update{
	Route: Route{
		Name:         {{.PluralName | ToLower}}NamePrefix + ".update",
		Path:         {{.PluralName | ToLower}}RoutePrefix + "/:id",
		Method:       http.MethodPut,
		Controller:      "{{.ResourceName}}s",
		ControllerMethod: "Update",
	},
}

type {{.PluralName | ToLower}}Update struct {
	Route
}

func (r {{.PluralName | ToLower}}Update) GetPath(id uuid.UUID) string {
	return strings.Replace(r.Path, ":id", id.String(), 1)
}

var {{.ResourceName}}Destroy = {{.PluralName | ToLower}}Destroy{
	Route: Route{
		Name:         {{.PluralName | ToLower}}NamePrefix + ".destroy",
		Path:         {{.PluralName | ToLower}}RoutePrefix + "/:id",
		Method:       http.MethodDelete,
		Controller:      "{{.ResourceName}}s",
		ControllerMethod: "Destroy",
	},
}

type {{.PluralName | ToLower}}Destroy struct {
	Route
}

func (r {{.PluralName | ToLower}}Destroy) GetPath(id uuid.UUID) string {
	return strings.Replace(r.Path, ":id", id.String(), 1)
}

